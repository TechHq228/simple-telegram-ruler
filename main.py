from telegram import Update
from telegram.ext import Application, MessageHandler, ContextTypes, filters
from dotenv import load_dotenv
import os

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
DISCUSSION_CHAT_ID = int(os.getenv("DISCUSSION_CHAT_ID"))  # ID —á–∞—Ç–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏—è
CHANNEL_ID = int(os.getenv("CHANNEL_ID"))  # ID —Å–∞–º–æ–≥–æ –∫–∞–Ω–∞–ª–∞ (–Ω–µ username!)

RULES_TEXT = """
üìå –ü—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞:
1. –£–≤–∞–∂–∞–π—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞
2. –ë–µ–∑ —Ä–µ–∫–ª–∞–º—ã –∏ —Å–ø–∞–º–∞
3. –°–æ–±–ª—é–¥–∞–π—Ç–µ —Ç–µ–º—É –ø–æ—Å—Ç–∞
"""

async def handle_forwarded_post(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.effective_message

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ –Ω—É–∂–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    if message.forward_from_chat and message.forward_from_chat.id == CHANNEL_ID:
        try:
            await context.bot.send_message(
                chat_id=DISCUSSION_CHAT_ID,
                text=RULES_TEXT,
                reply_to_message_id=message.message_id
            )
            print(f"‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–æ–±–∞–≤–ª–µ–Ω –∫ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é {message.message_id}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    app = Application.builder().token(BOT_TOKEN).build()

    # –°–ª—É—à–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è
    discussion_handler = MessageHandler(
        filters.Chat(chat_id=DISCUSSION_CHAT_ID) & filters.FORWARDED,
        handle_forwarded_post
    )

    app.add_handler(discussion_handler)
    app.run_polling()

if __name__ == '__main__':
    main()
